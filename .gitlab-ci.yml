image: docker:stable

stages:
  - build
  - test
  - deploy

variables:
  IMAGE: ${CI_REGISTRY_IMAGE}/${CI_PROJECT_NAME}
  # IMAGE: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}

build:
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
  script:
    - cd app
    # Login to GitLab Docker Registiry
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    # Pull the previously pushed image (if it exists)
    - docker pull $IMAGE:latest || true
    # Build and tag the new image
    - docker build
        --cache-from $IMAGE:latest
        --tag $IMAGE:latest
        --file ./Dockerfile.prod
        "."
    # Push the new image to Gitlab Resgitry
    - docker push $IMAGE:latest

test:
  stage: test
  image: $IMAGE:latest
  services:
    - postgres:latest
  variables:
    POSTGRES_DB: users
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: ""
    DATABASE_URL: postgres://runner@postgres:5432/users
    # https://docs.gitlab.com/ee/ci/services/postgres.html
  script:
    - cd app
    - pytest -p no:warnings --cov=.
    - flake8 .
    - black --check --exclude=migrations .
    - isort ./*/*.py --check-only